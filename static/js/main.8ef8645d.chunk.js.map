{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggleSelection","event","selectedGood","newGoods","button","target","buttonText","textContent","setState","filter","good","getStringOfSelected","goods","lastGood","length","goodsExceptOfLast","slice","join","removeAllGoods","this","isAnyGoodSelected","className","type","onClick","map","isSelected","includes","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,gBAAkB,SAChBC,EACAC,GAEA,IAEIC,EAFEC,EAASH,EAAMI,OACfC,EAAaF,EAAOG,YAG1B,EAAKC,UAAS,SAACV,GAYb,MAXmB,QAAfQ,GACFF,EAAOG,YAAc,SAErBJ,EAAQ,sBAAOL,EAAMC,eAAb,CAA4BG,MAEpCE,EAAOG,YAAc,MAErBJ,EAAWL,EAAMC,cACdU,QAAO,SAAAC,GAAI,OAAIA,IAASR,MAGtB,CACLH,cAAeI,O,EAKrBQ,oBAAsB,SAACC,GACrB,IAAMC,EAAWD,EAAMA,EAAME,OAAS,GAChCC,EAAoBH,EAAMI,MAAM,GAAI,GAAGC,KAAK,MAElD,OAAQL,EAAME,QACZ,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBACF,QACE,MAAM,GAAN,OAAUG,EAAV,gBAAmCF,EAAnC,mB,EAINK,eAAiB,WACf,EAAKV,SAAS,CACZT,cAAe,M,4CAInB,WACE,IACEC,EAIEmB,KAJFnB,gBACAW,EAGEQ,KAHFR,oBACAO,EAEEC,KAFFD,eAGMnB,EADJoB,KADFrB,MAEMC,cACFqB,EAAoBrB,EAAce,OAAS,EAEjD,OACE,sBAAKO,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UACGV,EAAoBZ,GACpBqB,GACC,wBAAQE,KAAK,SAASC,QAASL,EAA/B,kBAMJ,oBAAIG,UAAU,YAAd,SACGzB,EAAgB4B,KAAI,SAACd,GACpB,IAAMe,EAAa1B,EAAc2B,SAAShB,GACpCJ,EAAamB,EACf,SACA,MAEJ,OACE,qBAAIJ,UAAU,YAAd,UACE,mBACEA,UACEM,IACE,kBACA,CACEC,SAAUH,IALlB,SAUGf,IAGH,wBACEY,KAAK,SACLC,QAAS,SAACtB,GACRD,EAAgBC,EAAOS,IAH3B,SAMGJ,MApB0BI,e,GAhF3BmB,IAAMC,WA+GTjC,ICjIfkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ef8645d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  toggleSelection = (\n    event: React.MouseEvent,\n    selectedGood: string,\n  ) => {\n    const button = event.target as HTMLElement;\n    const buttonText = button.textContent;\n    let newGoods: string[];\n\n    this.setState((state) => {\n      if (buttonText === 'Add') {\n        button.textContent = 'Remove';\n\n        newGoods = [...state.selectedGoods, selectedGood];\n      } else {\n        button.textContent = 'Add';\n\n        newGoods = state.selectedGoods\n          .filter(good => good !== selectedGood);\n      }\n\n      return {\n        selectedGoods: newGoods,\n      };\n    });\n  };\n\n  getStringOfSelected = (goods: string[]) => {\n    const lastGood = goods[goods.length - 1];\n    const goodsExceptOfLast = goods.slice(0, -1).join(', ');\n\n    switch (goods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      default:\n        return `${goodsExceptOfLast} and ${lastGood} are selected`;\n    }\n  };\n\n  removeAllGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const {\n      toggleSelection,\n      getStringOfSelected,\n      removeAllGoods,\n      state,\n    } = this;\n    const { selectedGoods } = state;\n    const isAnyGoodSelected = selectedGoods.length > 0;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {getStringOfSelected(selectedGoods)}\n          {isAnyGoodSelected && (\n            <button type=\"button\" onClick={removeAllGoods}>\n              X\n            </button>\n          )}\n        </h1>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good) => {\n            const isSelected = selectedGoods.includes(good);\n            const buttonText = isSelected\n              ? 'Remove'\n              : 'Add';\n\n            return (\n              <li className=\"App__item\" key={good}>\n                <p\n                  className={\n                    classNames(\n                      'App__item-title',\n                      {\n                        selected: isSelected,\n                      },\n                    )\n                  }\n                >\n                  {good}\n                </p>\n\n                <button\n                  type=\"button\"\n                  onClick={(event) => {\n                    toggleSelection(event, good);\n                  }}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}