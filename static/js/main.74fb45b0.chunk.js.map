{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggleSelection","event","selectedGood","button","target","buttonText","textContent","addGood","removeGood","getStringOfSelected","goods","lastGood","length","goodsExceptOfLast","slice","join","removeAllGoods","setState","filter","good","this","isAnyGoodSelected","className","type","onClick","map","isSelected","includes","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,gBAAkB,SAChBC,EACAC,GAEA,IAAMC,EAASF,EAAMG,OACfC,EAAaF,EAAOG,YAC1B,iBAAQC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEjB,OAAQH,GACN,IAAK,MACHE,EAAQL,GACRC,EAAOG,YAAc,SACrB,MAEF,IAAK,SACHE,EAAWN,GACXC,EAAOG,YAAc,Q,EAQ3BG,oBAAsB,SAACC,GACrB,IAAMC,EAAWD,EAAMA,EAAME,OAAS,GAChCC,EAAoBH,EAAMI,MAAM,GAAI,GAAGC,KAAK,MAElD,OAAQL,EAAME,QACZ,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBACF,QACE,MAAM,GAAN,OAAUG,EAAV,gBAAmCF,EAAnC,mB,EAINK,eAAiB,WACf,EAAKC,SAAS,CACZlB,cAAe,M,EAInBQ,QAAU,SAACL,GACT,EAAKe,UAAS,SAAAnB,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BG,S,EAI5CM,WAAa,SAACN,GACZ,EAAKe,UAAS,SAAAnB,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAAcmB,QACjC,SAAAC,GAAI,OAAIjB,IAAiBiB,U,4CAK/B,WACE,IACEnB,EAIEoB,KAJFpB,gBACAS,EAGEW,KAHFX,oBACAO,EAEEI,KAFFJ,eAGMjB,EADJqB,KADFtB,MAEMC,cACFsB,EAAoBtB,EAAca,OAAS,EAEjD,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UACGb,EAAoBV,GACpBsB,GACC,wBAAQE,KAAK,SAASC,QAASR,EAA/B,kBAMJ,oBAAIM,UAAU,YAAd,SACG1B,EAAgB6B,KAAI,SAACN,GACpB,IAAMO,EAAa3B,EAAc4B,SAASR,GACpCd,EAAaqB,EACf,SACA,MAEJ,OACE,qBAAIJ,UAAU,YAAd,UACE,mBACEA,UACEM,IACE,kBACA,CACEC,SAAUH,IALlB,SAUGP,IAGH,wBACEI,KAAK,SACLC,QAAS,SAACvB,GACRD,EAAgBC,EAAOkB,IAH3B,SAMGd,MApB0Bc,e,GA5F3BW,IAAMC,WA2HTlC,IC7IfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74fb45b0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  toggleSelection = (\n    event: React.MouseEvent,\n    selectedGood: string,\n  ) => {\n    const button = event.target as HTMLElement;\n    const buttonText = button.textContent;\n    const { addGood, removeGood } = this;\n\n    switch (buttonText) {\n      case 'Add':\n        addGood(selectedGood);\n        button.textContent = 'Remove';\n        break;\n\n      case 'Remove':\n        removeGood(selectedGood);\n        button.textContent = 'Add';\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  getStringOfSelected = (goods: string[]) => {\n    const lastGood = goods[goods.length - 1];\n    const goodsExceptOfLast = goods.slice(0, -1).join(', ');\n\n    switch (goods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      default:\n        return `${goodsExceptOfLast} and ${lastGood} are selected`;\n    }\n  };\n\n  removeAllGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  addGood = (selectedGood: string) => {\n    this.setState(state => ({\n      selectedGoods: [...state.selectedGoods, selectedGood],\n    }));\n  };\n\n  removeGood = (selectedGood: string) => {\n    this.setState(state => ({\n      selectedGoods: state.selectedGoods.filter(\n        good => selectedGood !== good,\n      ),\n    }));\n  };\n\n  render() {\n    const {\n      toggleSelection,\n      getStringOfSelected,\n      removeAllGoods,\n      state,\n    } = this;\n    const { selectedGoods } = state;\n    const isAnyGoodSelected = selectedGoods.length > 0;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {getStringOfSelected(selectedGoods)}\n          {isAnyGoodSelected && (\n            <button type=\"button\" onClick={removeAllGoods}>\n              X\n            </button>\n          )}\n        </h1>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good) => {\n            const isSelected = selectedGoods.includes(good);\n            const buttonText = isSelected\n              ? 'Remove'\n              : 'Add';\n\n            return (\n              <li className=\"App__item\" key={good}>\n                <p\n                  className={\n                    classNames(\n                      'App__item-title',\n                      {\n                        selected: isSelected,\n                      },\n                    )\n                  }\n                >\n                  {good}\n                </p>\n\n                <button\n                  type=\"button\"\n                  onClick={(event) => {\n                    toggleSelection(event, good);\n                  }}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}